(function (e) {
  function s() {
    const s = e('.header-search-toggle');
    const i = e('button.search-close');
    const n = e('.main-search-active');
    s.on('click', () => {
      n.addClass('inside');
    }),
      i.on('click', () => {
        n.removeClass('inside');
      });
  }

  function i() {
    const s = e('#scroll-top');
    let i = 0;
    const n = e(window);
    n.on('scroll', function () {
      const o = e(this).scrollTop();
      o > i
        ? s.removeClass('show')
        : n.scrollTop() > 200
        ? s.addClass('show')
        : s.removeClass('show'),
        (i = o);
    }),
      s.on('click', (s) => {
        e('html, body').animate(
          {
            scrollTop: 0,
          },
          600,
        ),
          s.preventDefault();
      });
  }
  const n = e(window);
  const o = e('body');
  e('[data-bg-image]').each(function () {
    const s = e(this);
    const i = s.data('bg-image');
    s.css('background-image', `url(${i})`);
  }),
    e('[data-bg-color]').each(function () {
      const s = e(this);
      const i = s.data('bg-color');
      s.css('background-color', i);
    }),
    s(),
    e('.scene').each(function () {
      new Parallax(e(this)[0]);
    }),
    n.on('scroll', () => {
      n.scrollTop() > 350
        ? e('.sticky-header').addClass('is-sticky')
        : e('.sticky-header').removeClass('is-sticky');
    }),
    e('.header-mobile-menu-toggle, .mobile-menu-close').on(
      'click',
      '.toggle',
      () => {
        o.toggleClass('mobile-menu-open');
      },
    ),
    e('.site-mobile-menu').on('click', '.menu-toggle', function (s) {
      s.preventDefault();
      const i = e(this);
      i.siblings('.sub-menu:visible, .mega-menu:visible').length
        ? i
            .siblings('.sub-menu, .mega-menu')
            .slideUp()
            .parent()
            .removeClass('open')
            .find('.sub-menu, .mega-menu')
            .slideUp()
            .parent()
            .removeClass('open')
        : i
            .siblings('.sub-menu, .mega-menu')
            .slideDown()
            .parent()
            .addClass('open')
            .siblings()
            .find('.sub-menu, .mega-menu')
            .slideUp()
            .parent()
            .removeClass('open');
    }),
    e('.header-search-toggle').on('click', function (s) {
      s.preventDefault(),
        e(this)
          .siblings('.header-search-form, .header-search-form-2')
          .slideToggle()
          .parent()
          .toggleClass('open');
    }),
    e('.header-fs-search-toggle').on('click', () => {
      e('#fullscreen-search').addClass('open');
    }),
    e('.fullscreen-search-close').on('click', '.toggle', () => {
      e('#fullscreen-search').removeClass('open');
    }),
    o.on('click', (s) => {
      !e(s.target).closest('.header-search').length &&
        n.width() < 768 &&
        e('.header-search-form, .header-search-form-2')
          .slideUp()
          .parent()
          .removeClass('open'),
        e(s.target).closest('.site-main-mobile-menu-inner').length ||
          e(s.target).closest('.header-mobile-menu-toggle').length ||
          o.removeClass('mobile-menu-open');
    }),
    e('.headline-active').animatedHeadline({
      animationType: 'rotate-3',
    }),
    AOS.init({
      offset: 80,
      duration: 1e3,
      once: !0,
      easing: 'ease',
    }),
    e('.js-tilt').tilt({
      base: window,
      reset: 1,
      scale: 1.1,
      reverse: 0,
      max: 6666,
      perspective: 6666,
      speed: 3333,
      disableAxis: 'x',
    }),
    e('.js-tilt-glare').tilt({
      base: window,
      reset: 1,
      scale: 1.0,
      reverse: 0,
      max: 5000,
      perspective: 5000,
      speed: 5000,
      disableAxis: 'y',
    }),
    e(window).load(() => {
      e('.ag-masonary-wrapper').imagesLoaded(() => {
        e('.messonry-button').on('click', 'button', function () {
          const i = e(this).attr('data-filter');
          e(this).siblings('.is-checked').removeClass('is-checked'),
            e(this).addClass('is-checked'),
            s.isotope({
              filter: i,
            });
        });
        var s = e('.mesonry-list').isotope({
          percentPosition: !0,
          transitionDuration: '0.7s',
          layoutMode: 'masonry',
          masonry: {
            columnWidth: '.resizer',
          },
        });
      });
    }),
    SVGInject(document.querySelectorAll('img.svgInject'), {
      makeIdsUnique: !0,
      afterInject(e, s) {
        new Vivus(s, {
          duration: 125,
        });
      },
    }),
    e('.counter').counterUp({
      time: 2e3,
    });
  new Swiper('.intro-slider', {
    loop: !0,
    speed: 750,
    spaceBetween: 30,
    slidesPerView: 2,
    effect: 'fade',
    navigation: {
      nextEl: '.home-slider-next',
      prevEl: '.home-slider-prev',
    },
  }),
    new Swiper('.swiper-container', {
      spaceBetween: 30,
      centeredSlides: !0,
      initialSlide: 2,
      loop: !0,
      autoplay: {
        delay: 2e3,
      },
      breakpoints: {
        1499: {
          slidesPerView: 5,
        },
        991: {
          slidesPerView: 5,
        },
        767: {
          slidesPerView: 3,
        },
        575: {
          slidesPerView: 2,
        },
      },
    }),
    new Swiper('.brand-carousel', {
      watchSlidesVisibility: !0,
      loop: !0,
      spaceBetween: 30,
      slidesPerView: 5,
      breakpoints: {
        1200: {
          slidesPerView: 5,
        },
        992: {
          slidesPerView: 4,
        },
        768: {
          slidesPerView: 3,
        },
        576: {
          slidesPerView: 2,
        },
        320: {
          slidesPerView: 2,
        },
      },
    });
  const t = e('.isotope-grid');
  const a = e('.isotope-filter');
  t.imagesLoaded(() => {
    t.isotope({
      itemSelector: '.grid-item',
      masonry: {
        columnWidth: '.grid-sizer',
      },
    }),
      AOS.refresh();
  }),
    a.on('click', 'button', function () {
      const s = e(this);
      const i = s.attr('data-filter');
      const n = s.parent().data('target');
      s.addClass('active').siblings().removeClass('active'),
        e(n).isotope({
          filter: i,
        });
    }),
    e('.video-popup').magnificPopup({
      type: 'iframe',
    });
  const r = [
    {
      type: 'video/mp4',
      src: 'assets/media/video/IMG_0974.mp4',
    },
  ];
  new vidim('.bg-video', {
    src: r,
  });
  i(),
    e(() => {
      const s = e('#contact-form');
      const i = e('.form-messege');
      e(s).submit((n) => {
        n.preventDefault();
        const o = e(s).serialize();
        e.ajax({
          type: 'POST',
          url: e(s).attr('action'),
          data: o,
        })
          .done((s) => {
            e(i).removeClass('error'),
              e(i).addClass('success'),
              e(i).text(s),
              e('#contact-form input,#contact-form textarea').val('');
          })
          .fail((s) => {
            e(i).removeClass('success'),
              e(i).addClass('error'),
              s.responseText !== ''
                ? e(i).text(s.responseText)
                : e(i).text(
                    'Oops! An error occured and your message could not be sent.',
                  );
          });
      });
    }),
    n.on('load', () => {}),
    n.resize(() => {});
})(jQuery);
